/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CarWhereUniqueInput } from "../../car/base/CarWhereUniqueInput";
import {
  ValidateNested,
  IsString,
  IsOptional,
  IsDate,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { PlanWhereUniqueInput } from "../../plan/base/PlanWhereUniqueInput";
import { EnumRentalRentalStatus } from "./EnumRentalRentalStatus";

@InputType()
class RentalCreateInput {
  @ApiProperty({
    required: true,
    type: () => CarWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CarWhereUniqueInput)
  @Field(() => CarWhereUniqueInput)
  carId!: CarWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  currentLocation?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  deletedAt?: Date | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  destination!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  destinationGeoLoc!: string;

  @ApiProperty({
    required: true,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @Field(() => UserWhereUniqueInput)
  lesseeId!: UserWhereUniqueInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  pickupAddress!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  pickupGeoLoc!: string;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  pickupTime?: Date | null;

  @ApiProperty({
    required: true,
    type: () => PlanWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PlanWhereUniqueInput)
  @Field(() => PlanWhereUniqueInput)
  planId!: PlanWhereUniqueInput;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  rentalEndDatetime!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  rentalRequestTime!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  rentalStartDatetime!: Date;

  @ApiProperty({
    required: false,
    enum: EnumRentalRentalStatus,
  })
  @IsEnum(EnumRentalRentalStatus)
  @IsOptional()
  @Field(() => EnumRentalRentalStatus, {
    nullable: true,
  })
  rentalStatus?:
    | "Requesting"
    | "Accepted"
    | "Rejected"
    | "Active"
    | "Completed"
    | "Extended"
    | "Settled"
    | null;
}

export { RentalCreateInput as RentalCreateInput };
